spring:
  application:
    name: order

  data:
    mongodb:
      auto-index-creation: true
      host: ${MONGO_ORDER_HOST:localhost}
      port: ${MONGO_ORDER_PORT:27011}
      database: ${MONGO_ORDER_DATABASE:order}
      username: ${MONGO_ORDER_USERNAME:root}
      password: ${MONGO_ORDER_PASSWORD:example}
      authentication-database: admin

  kafka:
    bootstrap-servers: ${KAFKA_HOST:localhost}:${KAFKA_PORT:9092}
    topic:
      orders: ${ORDER_TOPIC:orders}
      inventory: ${INVENTORY_TOPIC:inventory}
      payment: ${PAYMENT_TOPIC:payment}
      delivery: ${DELIVERY_TOPIC:delivery}

    consumer:
      group-id: orders
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring:
          json:
            trusted:
              packages: "*"

    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer

  cloud:
    stream:
      bindings:
        orderRegisteredEventPublisher-out-0:
          destination: orders
        itemsReservedEventProcessor-in-0:
          destination: inventory
          group: orders

eureka:
  client:
    serviceUrl:
      defaultZone: ${SERVICE_PROTOCOL:http://}${DISCOVERY_DOMAIN:localhost}:${OMS_DISCOVERY_PORT:8000}/eureka

management:
  endpoint:
    health:
      show-details: always

  endpoints:
    web:
      exposure:
        include: 'health,prometheus'

  prometheus:
    metrics:
      export:
        enabled: true

springdoc:
  domain: ${APP_DOMAIN:http://localhost:8080}
  prefix: /api/v1/order
  swagger-ui:
    path: /swagger
  api-docs:
    path: /v3/api-docs
    enabled: true

starter:
  utils:
    jwt: true
    model-mapper: true
